{"version":3,"sources":["components/profile/Profile.module.scss","components/transactionhistory/TransactionHistory.module.scss","components/statistics/Statistics.module.scss","components/friendlist/FriendListItem.module.scss","components/transactionhistory/TransactionHistoryItem.module.scss","components/profile/ProfileStats.module.scss","components/statistics/StatisticsItem.module.scss","components/friendlist/FriendList.module.scss","components/profile/ProfileStats.js","components/profile/Profile.js","components/statistics/StatisticsItem.js","components/statistics/Statistics.js","components/friendlist/FriendListItem.js","components/friendlist/FriendList.js","components/transactionhistory/TransactionHistoryItem.js","components/transactionhistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","ProfileStats","title","value","className","styles","label","quantity","Profile","avatar","username","tag","location","statistics","profile","description","src","alt","name","stats","Object","keys","map","keyStat","item","defaultProps","StatisticsItem","percentage","Statistics","list","statInfo","style","backgroundColor","getRGB","width","length","id","r","Math","floor","random","b","g","FriendListItem","status","online","offline","FriendList","friends","friendList","friend","isOnline","TransactionHistoryItem","transactionType","transactionAmount","transactionCurrency","typeCell","cell","TransactionHistory","transactions","transactionHistory","tableHeader","transactionsItem","tableRow","type","amount","currency","App","user","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f54563e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1rB1l\",\"description\":\"Profile_description__3vB50\",\"avatar\":\"Profile_avatar__3_J0D\",\"name\":\"Profile_name__2kOkh\",\"tag\":\"Profile_tag__3CXIm\",\"location\":\"Profile_location__zDwYt\",\"stats\":\"Profile_stats__-1fbn\",\"item\":\"Profile_item__2ObU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2AY9j\",\"tableHeader\":\"TransactionHistory_tableHeader__2A0O3\",\"tableRow\":\"TransactionHistory_tableRow__3wT4C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3X_7A\",\"title\":\"Statistics_title__2XLK2\",\"list\":\"Statistics_list__2-Q7D\",\"item\":\"Statistics_item__2vj__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"FriendListItem_offline__3y3cz\",\"online\":\"FriendListItem_online__15fmr\",\"avatar\":\"FriendListItem_avatar__2T1ZD\",\"name\":\"FriendListItem_name__2xAZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typeCell\":\"TransactionHistoryItem_typeCell__1E3Mp\",\"cell\":\"TransactionHistoryItem_cell__1Ckrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ProfileStats_label__1LWSQ\",\"quantity\":\"ProfileStats_quantity__2roim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"StatisticsItem_label__1nRri\",\"percentage\":\"StatisticsItem_percentage__vOQbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1XeZy\",\"item\":\"FriendList_item__2dhTE\"};","import PropTypes from \"prop-types\";\nimport styles from \"./ProfileStats.module.scss\";\n\nexport default function ProfileStats({ title, value }) {\n  return (\n    <>\n      <span className={styles.label}>{title}</span>\n      <span className={styles.quantity}> {value}</span>\n    </>\n  );\n}\n\nProfileStats.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.scss\";\nimport ProfileStats from \"./ProfileStats\";\n\nexport default function Profile({\n  avatar,\n  username,\n  tag,\n  location,\n  statistics,\n}) {\n  return (\n    <section className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={username} className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        {Object.keys(statistics).map((keyStat) => (\n          <li key={keyStat} className={styles.item}>\n            <ProfileStats title={keyStat} value={statistics[keyStat]} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nProfile.defaultProps = {\n  avatar: \"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\",\n  location: \"no location\",\n  statistics: {},\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  statistics: PropTypes.object,\n};\n","import PropTypes from \"prop-types\";\n\nimport styles from \"./StatisticsItem.module.scss\";\n\nexport default function StatisticsItem({ label, percentage }) {\n  return (\n    <>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </>\n  );\n}\n\nStatisticsItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport StatisticsItem from \"./StatisticsItem.js\";\nimport styles from \"./Statistics.module.scss\";\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.list}>\n        {stats.map((statInfo) => (\n          <li\n            key={statInfo.id}\n            className={styles.item}\n            style={{\n              backgroundColor: getRGB(),\n              width: `calc(100%/${stats.length})`,\n            }}\n          >\n            <StatisticsItem\n              label={statInfo.label}\n              percentage={statInfo.percentage}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.defaultProps = {\n  title: \"\",\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired })\n  ),\n};\n\nfunction getRGB() {\n  const r = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendListItem.module.scss\";\n\nfunction FriendListItem({ status, name, avatar }) {\n  return (\n    <>\n      <span className={status ? styles.online : styles.offline}></span>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"User avatar\"\n        width=\"48\"\n      />\n      <p className={styles.name}>{name}</p>\n    </>\n  );\n}\n\nFriendListItem.defaultProps = {\n  avatar: \"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\",\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.scss\";\nimport FriendListItem from \"./FriendListItem.js\";\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map((friend) => (\n        <li className={styles.item} key={friend.id}>\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            status={friend.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from \"prop-types\";\n\nimport styles from \"./TransactionHistoryItem.module.scss\";\n\nexport default function TransactionHistoryItem({\n  transactionType,\n  transactionAmount,\n  transactionCurrency,\n}) {\n  return (\n    <>\n      <td className={styles.typeCell}>{transactionType}</td>\n      <td className={styles.cell}>{transactionAmount}</td>\n      <td className={styles.cell}>{transactionCurrency}</td>\n    </>\n  );\n}\n\nTransactionHistoryItem.propTypes = {\n  transactionType: PropTypes.string.isRequired,\n  transactionAmount: PropTypes.string.isRequired,\n  transactionCurrency: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./TransactionHistory.module.scss\";\n\nimport TransactionHistoryItem from \"./TransactionHistoryItem\";\n\nfunction TransactionHistory({ transactions }) {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th className={styles.tableHeader}>Type</th>\n          <th className={styles.tableHeader}>Amount</th>\n          <th className={styles.tableHeader}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map((transactionsItem) => (\n          <tr key={transactionsItem.id} className={styles.tableRow}>\n            <TransactionHistoryItem\n              transactionType={transactionsItem.type}\n              transactionAmount={transactionsItem.amount}\n              transactionCurrency={transactionsItem.currency}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.defaultProps = {\n  transactions: [],\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired })\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from \"./components/profile/Profile\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport FriendList from \"./components/friendlist/FriendList\";\nimport TransactionHistory from \"./components/transactionhistory/TransactionHistory\";\n\nimport user from \"./data/user.json\";\nimport data from \"./data/data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        avatar={user.avatar}\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        statistics={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}